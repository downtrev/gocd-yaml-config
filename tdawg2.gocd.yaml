#tdawg.gocd.yaml
pipelines:
  Tdawg2: # definition of mypipe1 pipeline
    environment_variables:
      COMPONENT: tdawg_product
    group: Tdawgs # note that the group name can contain only of alphanumeric & underscore characters
    label_template: "${git[:7]}"
    locking: off
    materials:
      git: http://github.com/kevinKalmbach/sovrnTest.git
      #gitTdawg: # this is the name of material, the name can contain only of alphanumeric & underscore characters
        # keyword git says about type of material and url at once
        #git: http://github.com/kevinKalmbach/sovrnTest.git
      branch: ['%BRANCH%']
    stages: # list of stages in order
      - Tdawg2.Build: # name of stage
          fetch_materials: yes
          keep_artifacts: yes
          clean_workspace: yes
          environment_variables:
            MVN_GOAL: mvn clean install
          jobs:
            build: # name of the job
              resources:
                - nimbus2000
              artifacts:
               - build:
                   source: target
                   destination: build
              tasks:
               - exec: # indicates type of task
                   run_if: passed
                   command: /bin/bash
                   arguments:
                    - -c
                    - $MVN_GOAL
               - plugin:
                   configuration: 
                     id: slack.task 
                     version: 1.3.1
                   options:
                     Channel: gocd
                     Color: 9900cc
                     ColorType: Custom
                     DisplayName: SCM BUILD BOT
                     IconOrEmoji: ":robot_face:"
                     Message: <http://ec2-54-71-67-101.us-west-2.compute.amazonaws.com:8153/go/tab/build/detail/$GO_PIPELINE_NAME/$GO_PIPELINE_COUNTER/$GO_STAGE_NAME/$GO_STAGE_COUNTER/$GO_JOB_NAME|Click here> for details.
                     Title: Happy Happy Joy Joy
                     WebhookUrl: https://hooks.slack.com/services/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
                   run_if: failed
               - script: |
                   WORK_DIR=`pwd`
                   AGENT=`echo $WORK_DIR |sed 's|\/|\n|g' |grep agent`
                   GIT_REV=`echo $GO_REVISION |sed 's/.//8g'`
                   ENV_FLAG=`echo $GO_ENVIRONMENT_NAME |cut -c 1`
                   PATTERN=*${GIT_REV}.${ENV_FLAG}*.deb
                   ARTIFACT=`find -type f -name "$PATTERN" |sed 's!.*\/!!g'`
                   if [ -z "$ARTIFACT" ]; then  ARTIFACT=`find . -name *$GIT_REV*.deb |sed 's!.*\/!!g'`;fi
                   AUTHOR_NAME=`git log -n 1 --pretty=format:"%an"`
                   AUTHOR_NAME=`echo $AUTHOR_NAME |sed 's| |_|g'` 
                   AUTHOR_EMAIL=`git log -n 1 --pretty=format:"%ae"`
                   COMMIT_DATE=`git log -n 1 --date=short --pretty=format:"%cd"`
                   COMMIT_MESSAGE=`git log -n 1 --pretty=format:"%s"`
                   EPOCH_TIME=`date +%s%N`
                   echo "$GO_REVISION"
                   echo "$GO_ENVIRONMENT_NAME"
                   echo "$GO_PIPELINE_NAME"
                   echo "$GO_PIPELINE_COUNTER"
                   echo "$GO_STAGE_NAME"
                   echo "$GO_STAGE_COUNTER"
                   echo "$GO_JOB_NAME"
                   echo "$WORK_DIR"
                   echo "$AGENT"
                   echo "$GIT_REV"
                   echo "$ENV_FLAG"
                   echo "$PATTERN"
                   echo "$ARTIFACT"
                   echo "$AUTHOR_NAME"
                   echo "$AUTHOR_EMAIL"
                   echo "$COMMIT_DATE"
                   echo "$COMMIT_MESSAGE"
                   echo "$EPOCH_TIME"
                   echo "======================================="
                   curl -x http://squid.dfw2.lijit.com:3128 -i -XPOST 'http://build3.dfw2.lijit.com:8086/write?db=go' --data-binary "test,environment=$GO_ENVIRONMENT_NAME,product=#{COMPONENT},pipeline_name=$GO_PIPELINE_NAME,stage_name=$GO_STAGE_NAME,job_name=$GO_JOB_NAME,agent=$AGENT,artifact=$ARTIFACT,trigger_user=$GO_TRIGGER_USER,author_name=$AUTHOR_NAME,author_email=$AUTHOR_EMAIL pipeline_counter=$GO_PIPELINE_COUNTER,pipeline_label=\"$GO_PIPELINE_LABEL\",stage_counter=$GO_STAGE_COUNTER,work_dir=\"$WORK_DIR\",revision=\"$GO_REVISION\",commit_date=\"$COMMIT_DATE\",commit_message=\"$COMMIT_MESSAGE\" $EPOCH_TIME"
                   echo "======================================="
                   echo ""
                   echo ""
      - Tdawg2.Install: # name of stage
          clean_workspace: true
          jobs:
            install: # name of the job
              resources:
               - nimbus2000
              tasks:
               - fetch: # indicates type of task
                   run_if: passed
                   is_file: no
                   pipeline: Tdawg2
                   stage: Tdawg2.Build
                   job: build
                   source: build/target
                   destination: 
